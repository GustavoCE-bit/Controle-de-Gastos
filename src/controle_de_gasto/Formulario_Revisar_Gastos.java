/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package controle_de_gasto;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;
import java.sql.SQLException;
import java.util.ArrayList;
import javax.swing.BoxLayout;
import javax.swing.JLabel;
import javax.swing.JMenuItem;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JPopupMenu;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author gusta
 */
public class Formulario_Revisar_Gastos extends javax.swing.JFrame {

    /**
     * Creates new form Formulario_Revisar_Gastos
     */
    public void Preencher_Tabela(){
        try{
            Consultas conn = new Consultas();
            ArrayList<Gasto> result = conn.getAllGastos();
            DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
            int rows = result.size();
            for(int i=0;i<rows;i++){
                model.addRow(new Object[]{result.get(i).getId(),conn.getDia(result.get(i).getDiaID()),result.get(i).getDescricao(),result.get(i).getValor(),result.get(i).getAbatimento_val(),result.get(i).getJuros_val(),result.get(i).getValor_total()});
            }
        }catch(SQLException ex){
            System.out.println("Erro ao retornar gasto");
            System.out.println(ex);
        }
    }
    
    public void Esvaziar_Tabela(){
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        int lines = model.getRowCount();
        for(int i =0; i<lines;i++){
            model.removeRow(i);
            i--;
            lines = model.getRowCount();
        }
    }
    
    public Formulario_Revisar_Gastos() {
        initComponents();
        KeyAdapter numOnly = new KeyAdapter(){
            public void keyTyped(KeyEvent e) {
                char c = e.getKeyChar();
                if ( ((c < '0') || (c > '9')) && (c != KeyEvent.VK_BACK_SPACE) && (c!=',')) {
                    e.consume();
                }
            }
        };
        jTF_Val_Min.addKeyListener(numOnly);
        jTF_Val_Max.addKeyListener(numOnly);
        Preencher_Tabela();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jTF_Descricao = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jTF_Val_Min = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jTF_Val_Max = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jCB_Dia_Min = new javax.swing.JComboBox<>();
        jCB_Mes_Min = new javax.swing.JComboBox<>();
        jCB_Ano_Min = new javax.swing.JComboBox<>();
        jLabel7 = new javax.swing.JLabel();
        jCB_Dia_Max = new javax.swing.JComboBox<>();
        jCB_Mes_Max = new javax.swing.JComboBox<>();
        jCB_Ano_Max = new javax.swing.JComboBox<>();
        jB_Aplicar = new javax.swing.JButton();
        jB_Remover = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "id", "dia", "descrição", "valor", "abatimento", "juros", "valor final"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Double.class, java.lang.Double.class, java.lang.Double.class, java.lang.Double.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jTable1.getTableHeader().setReorderingAllowed(false);
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        jLabel1.setText("Descrição do gasto");

        jTF_Descricao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTF_DescricaoActionPerformed(evt);
            }
        });

        jLabel2.setText("Valor");

        jTF_Val_Min.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTF_Val_MinKeyTyped(evt);
            }
        });

        jLabel3.setText("á");

        jTF_Val_Max.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTF_Val_MaxKeyTyped(evt);
            }
        });

        jLabel4.setText("Data");

        jLabel5.setText("de");

        jLabel6.setText("de");

        jCB_Dia_Min.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31" }));

        jCB_Mes_Min.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Janeiro", "Fevereiro", "Março", "Abril", "Maio", "Junho", "Julho", "Agosto", "Setembro", "Outubro", "Novembro", "Dezembro" }));
        jCB_Mes_Min.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCB_Mes_MinActionPerformed(evt);
            }
        });

        jCB_Ano_Min.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "2022", "2023", "2024", "2025", "2026", "2027", "2028", "2029", "2030" }));

        jLabel7.setText("á");

        jCB_Dia_Max.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31" }));

        jCB_Mes_Max.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Janeiro", "Fevereiro", "Março", "Abril", "Maio", "Junho", "Julho", "Agosto", "Setembro", "Outubro", "Novembro", "Dezembro" }));

        jCB_Ano_Max.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "2022", "2023", "2024", "2025", "2026", "2027", "2028", "2029", "2030" }));

        jB_Aplicar.setText("Aplicar Filtros");
        jB_Aplicar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jB_AplicarMouseClicked(evt);
            }
        });

        jB_Remover.setText("Remover Filtros / Atualizar tabela");
        jB_Remover.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jB_RemoverMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 479, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel7)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jLabel4)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel6))
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jLabel2)
                                    .addGap(61, 61, 61)
                                    .addComponent(jLabel5))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jCB_Dia_Min, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jCB_Mes_Min, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(6, 6, 6)
                                .addComponent(jCB_Ano_Min, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jTF_Val_Min, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTF_Val_Max, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jCB_Dia_Max, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jCB_Mes_Max, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jCB_Ano_Max, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jB_Remover)
                            .addComponent(jB_Aplicar)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jTF_Descricao, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(104, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jTF_Descricao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jTF_Val_Min, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)
                    .addComponent(jTF_Val_Max, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jLabel6)
                    .addComponent(jCB_Dia_Min, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jCB_Mes_Min, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jCB_Ano_Min, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(17, 17, 17)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jCB_Dia_Max, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jCB_Mes_Max, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7)
                    .addComponent(jCB_Ano_Max, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(14, 14, 14)
                .addComponent(jB_Aplicar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jB_Remover)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 305, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTF_DescricaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTF_DescricaoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTF_DescricaoActionPerformed

    private void jCB_Mes_MinActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCB_Mes_MinActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jCB_Mes_MinActionPerformed

    private void jTF_Val_MinKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTF_Val_MinKeyTyped
        String val = jTF_Val_Min.getText();
        char c = evt.getKeyChar();
        int ponto = val.indexOf(",")+3;
        int cursor = jTF_Val_Min.getCaretPosition();
        if(c==',' && val.contains(",")){
            evt.consume();
        }
        if(val.contains(",") && val.length()==ponto && cursor>ponto-3){
            evt.consume();
        }
        if(c==',' && cursor<val.length()-2){
            evt.consume();
        }
    }//GEN-LAST:event_jTF_Val_MinKeyTyped

    private void jTF_Val_MaxKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTF_Val_MaxKeyTyped
        String val = jTF_Val_Max.getText();
        char c = evt.getKeyChar();
        int ponto = val.indexOf(",")+3;
        int cursor = jTF_Val_Max.getCaretPosition();
        if(c==',' && val.contains(",")){
            evt.consume();
        }
        if(val.contains(",") && val.length()==ponto && cursor>ponto-3){
            evt.consume();
        }
        if(c==',' && cursor<val.length()-2){
            evt.consume();
        }
    }//GEN-LAST:event_jTF_Val_MaxKeyTyped

    private void jB_AplicarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jB_AplicarMouseClicked
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        int lines = model.getRowCount();
        int i;
        for(i = 0; i < lines; i++){
            if(model.getValueAt(i,2).toString().contains(jTF_Descricao.getText())){}else{
                model.removeRow(i);
                i-=1;
                lines = model.getRowCount();
            }
        }
        if(jTF_Val_Min.getText().isBlank()){}else{
            double valMin = Double.parseDouble(jTF_Val_Min.getText().replace(",", "."));
            lines = model.getRowCount();
            for(i=0;i<lines;i++){
                if(Double.parseDouble(model.getValueAt(i, 6).toString())<valMin){
                    model.removeRow(i);
                    i-=1;
                    lines = model.getRowCount();
                }
            }
        }
        if(jTF_Val_Max.getText().isBlank()){}else{
            double valMax = Double.parseDouble(jTF_Val_Max.getText().replace(",", "."));
            lines = model.getRowCount();
            for(i=0;i<lines;i++){
                if(Double.parseDouble(model.getValueAt(i, 6).toString())>valMax){
                    model.removeRow(i);
                    i-=1;
                    lines = model.getRowCount();
                }
            }
        }
    }//GEN-LAST:event_jB_AplicarMouseClicked

    private void jB_RemoverMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jB_RemoverMouseClicked
        jTF_Descricao.setText("");
        jTF_Val_Min.setText("");
        jTF_Val_Max.setText("");
        Esvaziar_Tabela();
        Preencher_Tabela();
    }//GEN-LAST:event_jB_RemoverMouseClicked
    
    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        int row = jTable1.getSelectedRow();
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        int id = (int) model.getValueAt(row, 0);
        if(row>=0){
            JPopupMenu popup = new JPopupMenu();
            JMenuItem editar = new JMenuItem("editar");
            JMenuItem deletar = new JMenuItem("deletar");
            popup.add(editar);
            editar.addActionListener(new ActionListener(){
                public void actionPerformed(ActionEvent e){
                    try {
                        Gasto gasto = new Gasto();
                        gasto.setId(id);
                        gasto.setDescricao((String) model.getValueAt(row, 2));
                        
                        String dia_mes = (String) model.getValueAt(row, 1);
                        String[] dia_mes_array = dia_mes.split("/", 2);
                        int dia = Integer.parseInt(dia_mes_array[0]);
                        gasto.setDia(dia);
                        String mes = dia_mes_array[1];
                        gasto.setMes(mes);
                        Consultas conn = new Consultas();
                        int dia_Id =  conn.getDiaID(dia, mes);
                        gasto.setDiaID(dia_Id);
                        
                        gasto.setValor((double) model.getValueAt(row, 3));
                        gasto.setAbatimento_val((double) model.getValueAt(row, 4));
                        if(gasto.getAbatimento_val()>0){
                            gasto.setAbatimento(true);
                        }else{
                            gasto.setAbatimento(false);
                        }
                        gasto.setJuros_val((double) model.getValueAt(row, 5));
                        if(gasto.getJuros_val()>0){
                            gasto.setJuros(true);
                        }else{
                            gasto.setJuros(false);
                        }
                        gasto.setValor_total((double) model.getValueAt(row, 6));
                        
                        Formulario_Inserir_Gasto form = new Formulario_Inserir_Gasto(gasto);
                        form.setVisible(true);
                    } catch (SQLException ex) {
                        System.out.println("Erro ao criar formulario de edição de gasto");
                        System.out.println(ex);
                    }
                }
            });
            popup.add(deletar);
            deletar.addActionListener(new ActionListener(){
                public void actionPerformed(ActionEvent e){
                    Object[] options = { "Confirmar", "Cancelar" };
                    JPanel panel = new JPanel();
                    panel.setLayout(new BoxLayout(panel, BoxLayout.Y_AXIS));
                    panel.add(new JLabel("ID:   "+id));
                    panel.add(new JLabel("DIA:  "+model.getValueAt(row, 1)));
                    panel.add(new JLabel("DESCRIÇÃO:    "+model.getValueAt(row, 2)));
                    panel.add(new JLabel("VALOR:    "+model.getValueAt(row, 3)));
                    panel.add(new JLabel("ABATIMENTO:   "+model.getValueAt(row, 4)));
                    panel.add(new JLabel("JUROS:    "+model.getValueAt(row, 5)));
                    panel.add(new JLabel("VALOR FINAL:  "+model.getValueAt(row, 6)));
                    int option = JOptionPane.showOptionDialog(null, panel, "Deletar gasto?", JOptionPane.DEFAULT_OPTION, JOptionPane.WARNING_MESSAGE, null, options, options[1]);
                    if(option == 0){
                        try{
                            Gasto gasto = new Gasto();
                            gasto.setId(id);
                            
                            String dia_mes = (String) model.getValueAt(row, 1);
                            String[] dia_mes_array = dia_mes.split("/", 2);
                            int dia = Integer.parseInt(dia_mes_array[0]);
                            gasto.setDia(dia);
                            String mes = dia_mes_array[1];
                            gasto.setMes(mes);
                            Consultas conn = new Consultas();
                            int dia_Id =  conn.getDiaID(dia, mes);
                            gasto.setDiaID(dia_Id);
                            
                            boolean sucesso = conn.deleteGasto(gasto);
                            if(sucesso){
                                JOptionPane.showMessageDialog(null, "Gasto deletado com sucesso");
                            }else{
                                JOptionPane.showMessageDialog(null, "Erro ao deletar gasto");
                            }
                        }catch(SQLException ex){
                            System.out.println("Erro ao deletar gasto");
                            System.out.println(ex);
                        }
                        
                        
                        
                    }
                }
            });
            popup.show(jTable1, evt.getX(), evt.getY());
        }
    }//GEN-LAST:event_jTable1MouseClicked

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        // TODO add your handling code here:
    }//GEN-LAST:event_formWindowOpened

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Formulario_Revisar_Gastos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Formulario_Revisar_Gastos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Formulario_Revisar_Gastos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Formulario_Revisar_Gastos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Formulario_Revisar_Gastos().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jB_Aplicar;
    private javax.swing.JButton jB_Remover;
    private javax.swing.JComboBox<String> jCB_Ano_Max;
    private javax.swing.JComboBox<String> jCB_Ano_Min;
    private javax.swing.JComboBox<String> jCB_Dia_Max;
    private javax.swing.JComboBox<String> jCB_Dia_Min;
    private javax.swing.JComboBox<String> jCB_Mes_Max;
    private javax.swing.JComboBox<String> jCB_Mes_Min;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jTF_Descricao;
    private javax.swing.JTextField jTF_Val_Max;
    private javax.swing.JTextField jTF_Val_Min;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables
}
